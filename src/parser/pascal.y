%locations
%define parse.error verbose

%code requires {

}

%{
extern int yylex();
extern void yyerror(const char*);
%}

%union{
    int64_t token_type;
    int64_t int_val;
    double real_val;
    bool bool_val;
    char char_val;
    char *text;
}

%token<token_type> KEY_AND
%token<token_type> KEY_ARRAY
%token<token_type> KEY_BEGIN
%token<token_type> KEY_CASE
%token<token_type> KEY_CONST
%token<token_type> KEY_DIV
%token<token_type> KEY_DO
%token<token_type> KEY_DOWNTO
%token<token_type> KEY_ELSE
%token<token_type> KEY_END
%token<token_type> KEY_FILE
%token<token_type> KEY_FOR
%token<token_type> KEY_FORWARD
%token<token_type> KEY_FUNCTION
%token<token_type> KEY_GOTO
%token<token_type> KEY_IF
%token<token_type> KEY_IN
%token<token_type> KEY_LABEL
%token<token_type> KEY_MOD
%token<token_type> KEY_NIL
%token<token_type> KEY_NOT
%token<token_type> KEY_OF
%token<token_type> KEY_OR
%token<token_type> KEY_PACKED
%token<token_type> KEY_PROCEDURE
%token<token_type> KEY_PROGRAM
%token<token_type> KEY_RECORD
%token<token_type> KEY_REPEAT
%token<token_type> KEY_SET
%token<token_type> KEY_THEN
%token<token_type> KEY_TO
%token<token_type> KEY_TYPE
%token<token_type> KEY_UNTIL
%token<token_type> KEY_VAR
%token<token_type> KEY_WHILE
%token<token_type> KEY_WITH

%token<token_type> OP_ADD
%token<token_type> OP_MINUS
%token<token_type> OP_MUL
%token<token_type> OP_DIV
%token<token_type> OP_EQ
%token<token_type> OP_LT
%token<token_type> OP_GT
%token<token_type> OP_L_BCK
%token<token_type> OP_R_BCK
%token<token_type> OP_DOT
%token<token_type> OP_COMMA
%token<token_type> OP_COLON
%token<token_type> OP_SEMICOLON
%token<token_type> OP_CARET
%token<token_type> OP_L_PRTS
%token<token_type> OP_R_PRTS
%token<token_type> OP_DDOT

%token<token_type> IO_READ
%token<token_type> IO_WRITE
%token<token_type> IO_READLN
%token<token_type> IO_WRITELN

%token<text> IDENTIFIER

%%
    /* 程序和块 */
PROGRAM:
    PROGRAM_HEADING OP_SEMICOLON PROGRAM_BLOCK


PROGRAM_HEADING:
    PROGRAM IDENTIFIER OP_L_PRTS PROGRAM_PARAMETERS OP_R_PRTS


PROGRAM_PARAMETERS:
    | IDENTIFIER_LIST

PROGRAM_BLOCK:
    BLOCK OP_DOT

BLOCK:
    CONST_DEFS TYPE_DEFS VAR_DECLS PROCEDURE_FUNCTION_DECLS STATEMENT_PART

    /* 声明和类型定义 */

CONST_DEFS:
    | KEY_CONST CONST_DEF_SEQ OP_SEMICOLON

CONST_DEF_SEQ:
    CONST_DEF_SEQ OP_SEMICOLON CONST_DEF
    | CONST_DEF

CONST_DEF:
    IDENTIFIER OP_EQ CONSTANT

TYPE_DEFS:
    | KEY_TYPE TYPE_DEF_SEQ OP_SEMICOLON

TYPE_DEF_SEQ:
    TYPE_DEF_SEQ OP_SEMICOLON TYPE_DEF
    | TYPE_DEF

TYPE_DEF:
    IDENTIFIER OP_EQ TYPE_DENOTER

VAR_DECLS:
    | KEY_VAR VAR_DECL_SEQ OP_SEMICOLON

VAR_DECL_SEQ:
    VAR_DECL_SEQ OP_SEMICOLON VAR_DECL
    | VAR_DECL

VAR_DECL:
    IDENTIFIER_LIST OP_COLON TYPE_DENOTER

PROCEDURE_FUNCTION_DECLS:
    | PROCEDURE_FUNCTION_DECLS SUBPROGRAM_DECL OP_SEMICOLON
    | SUBPROGRAM_DECL OP_SEMICOLON

IDENTIFIER_LIST:
    IDENTIFIER_LIST OP_COMMA IDENTIFIER
    | IDENTIFIER

    /* 子程序声明 */

SUBPROGRAM_DECL:
    PROCEDURE_DECL | FUNCTION_DECL

    /* 过程声明 */

PROCEDURE_DECL:
    PROCEDURE_HEADING OP_SEMICOLON DIRECTIVE
    | PROCEDURE_HEADING OP_SEMICOLON PROCEDURE_BLOCK

PROCEDURE_HEADING:
    KEY_PROCEDURE IDENTIFIER
    | KEY_PROCEDURE IDENTIFIER FORMAL_PARAMETER_LIST

PROCEDURE_BLOCK:
    CONST_DEFS TYPE_DEFS VAR_DECLS STATEMENT_PART

DIRECTIVE:
    KEY_FORWARD

TYPE_DENOTER:
    TYPE_IDENTIFIER
    | NEW_TYPE

    /* 函数声明 */

FUNCTION_DECL:
    FUNCTION_HEADING OP_SEMICOLON DIRECTIVE
    | FUNCTION_HEADING OP_SEMICOLON FUNCTION_BLOCK

FUNCTION_HEADING:
    KEY_FUNCTION IDENTIFIER FORMAL_PARAMETER_LIST OP_COLON RESULT_TYPE
    | KEY_FUNCTION IDENTIFIER OP_COLON RESULT_TYPE

FUNCTION_BLOCK:
    CONST_DEFS TYPE_DEFS VAR_DECLS STATEMENT_PART

FORMAL_PARAMETER_LIST:
    OP_L_PRTS FORMAL_PARAMETER_SECTIONS OP_R_PRTS

FORMAL_PARAMETER_SECTIONS:
    FORMAL_PARAMETER_SECTIONS OP_SEMICOLON FORMAL_PARAMETER_SECTION
    | FORMAL_PARAMETER_SECTION

FORMAL_PARAMETER_SECTION:
    VALUE_PARA_SPEC
    | VARIABLE_PARA_SPEC
    | PROCEDURE_PARA_SEPC
    | FUNCTION_PARA_SEPC
    | CONFORMANT_ARRAY_PARA_SEPC

VALUE_PARA_SPEC:
    IDENTIFIER_LIST OP_COLON TYPE_IDENTIFIER

VARIABLE_PARA_SPEC:
    KEY_VAR IDENTIFIER_LIST OP_COLON TYPE_IDENTIFIER

PROCEDURE_PARA_SEPC:
    PROCEDURE_HEADING

FUNCTION_PARA_SEPC:
    FUNCTION_HEADING

CONFORMANT_ARRAY_PARA_SEPC:
    VALUE_CONFORMANT_ARRAY_SEPC
    | VARIABLE_CONFORMANT_ARRAY_SEPC

VALUE_CONFORMANT_ARRAY_SEPC:
    IDENTIFIER_LIST OP_COLON CONFORMANT_ARRAY_SCHEMA

VARIABLE_CONFORMANT_ARRAY_SEPC:
    KEY_VAR IDENTIFIER_LIST OP_COLON CONFORMANT_ARRAY_SCHEMA

CONFORMANT_ARRAY_SCHEMA:
    PACKED_CONFORMANT_ARRAY_SCHEMA
    | UNPACKED_CONFORMANT_ARRAY_SCHEMA

PACKED_CONFORMANT_ARRAY_SCHEMA:
    KEY_PACKED KEY_ARRAY OP_L_BCK INDEX_TYPE_SPEC OP_R_BCK KEY_OF TYPE_IDENTIFIER

UNPACKED_CONFORMANT_ARRAY_SCHEMA:
    KEY_ARRAY OP_L_BCK INDEX_TYPE_SPECS OP_R_BCK KEY_OF TYPE_IDENTIFIER
    | KEY_ARRAY OP_L_BCK INDEX_TYPE_SPECS OP_R_BCK KEY_OF CONFORMANT_ARRAY_SCHEMA

INDEX_TYPE_SPECS:
    INDEX_TYPE_SPECS OP_SEMICOLON INDEX_TYPE_SPEC
    | INDEX_TYPE_SPEC

INDEX_TYPE_SPEC:
    IDENTIFIER OP_DDOT IDENTIFIER OP_COLON ORDINAL_TYPE_IDENTIFIER

    /* 常量 */

CONSTANT:
    SIGNED_NUMBER
    | CONSTANT_IDENTIFIER
    | CHARACTER_STRING

UNSIGNED_CONSTANT:
    UNSIGNED_NUMBER
    | CHARACTER_STRING
    | CONSTANT_IDENTIFIER
    | KEY_NIL

SIGNED_NUMBER:
    SIGNED_INTEGER
    | SIGNED_REAL

UNSIGNED_NUMBER:
    UNSIGNED_INTEGER
    | UNSIGNED_REAL

CONSTANT_IDENTIFIER:
    IDENTIFIER

    /* 类型 */ 

TYPE_IDENTIFIER:
    IDENTIFIER

NEW_TYPE:
    NEW_ORDINAL_TYPE
    | NEW_STRUCTURED_TYPE
    | NEW_POINTER_TYPE

RESULT_TYPE:
    TYPE_IDENTIFIER

NEW_ORDINAL_TYPE:
    SUBRANGE_TYPE
    
NEW_STRUCTURED_TYPE:
    UNPACKED_STRUCTURE_TYPE
    | KEY_PACKED UNPACKED_STRUCTURE_TYPE

NEW_POINTER_TYPE:
    OP_CARET DOMAIN_TYPE

SUBRANGE_TYPE:
    CONSTANT OP_DDOT CONSTANT

UNPACKED_STRUCTURE_TYPE:
    ARRAY_TYPE
    | RECORD_TYPE

DOMAIN_TYPE:
    TYPE_IDENTIFIER

ARRAY_TYPE:
    KEY_ARRAY OP_L_BCK INDEX_TYPES OP_R_BCK KEY_OF COMPONENT_TYPE

INDEX_TYPES:
    INDEX_TYPES OP_COMMA INDEX_TYPE
    | INDEX_TYPE

INDEX_TYPE:
    ORDINAL_TYPE

COMPONENT_TYPE:
    TYPE_DENOTER

BASE_TYPE:
    ORDINAL_TYPE

ORDINAL_TYPE:
    NEW_ORDINAL_TYPE
    | ORDINAL_TYPE_IDENTIFIER

ORDINAL_TYPE_IDENTIFIER:
    TYPE_IDENTIFIER

RECORD_TYPE:
    KEY_RECORD FIELD_LIST KEY_END

RECORD_SECTION:
    IDENTIFIER_LIST OP_COLON TYPE_DENOTER

FIELD_LIST:
    | FIXED_PART OP_SEMICOLON

FIXED_PART:
    FIXED_PART OP_SEMICOLON RECORD_SECTION
    | RECORD_SECTION

    /* 语句 */

PROCEDURE_STATEMENT:
    PROCEDURE_IDENTIFIER ACTUAL_PARA_LIST
    | PROCEDURE_IDENTIFIER
    | IO_PROCEDURE_STATEMENT

IO_PROCEDURE_STATEMENT:
    IO_READ READ_PARA_LIST
    | IO_READLN READLN_PARA_LIST
    | IO_WRITE WRITE_PARA_LIST
    | IO_WRITELN WRITELN_PARA_LIST

ACTUAL_PARA_LIST:
    OP_L_PRTS ACTUAL_PARAS OP_R_PRTS

ACTUAL_PARAS:
    ACTUAL_PARAS OP_COMMA ACTUAL_PARA 
    | ACTUAL_PARA 

READ_PARA_LIST:
    OP_L_PRTS VARIABLE_ACCESSES OP_R_PRTS

VARIABLE_ACCESSES:
    VARIABLE_ACCESSES OP_COMMA VARIABLE_ACCESS
    | VARIABLE_ACCESS

READLN_PARA_LIST:
    | OP_L_PRTS VARIABLE_ACCESSES OP_R_PRTS

WRITE_PARA_LIST:
    WRITE_PARAS 

WRITE_PARAS:
    WRITE_PARAS OP_COMMA WRITE_PARA 
    | WRITE_PARA 

WRITELN_PARA_LIST:
    | WRITE_PARAS

ACTUAL_PARA:
    EXPRESSION
    | VARIABLE_ACCESS
    | PROCEDURE_IDENTIFIER
    | FUNCTION_IDENTIFIER

VARIABLE_ACCESS:
    ENTIRE_VARIABLE
    | COMPONENT_VARIABLE
    | IDENTIFIED_VARIABLE
    | BUFFER_VARIABLE

WRITE_PARA:
    

%%